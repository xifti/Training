#include <iostream>


/* 
Программа позволяет увидеть, что будет при "исчерпании динамической памяти".
Программа при помощи рекурсии создает char массивы (размером 10миллионов char) в динамической памяти и выводит на экран количество созданых копий.

При помощи этой программы мы видим, что программа завершает свою работу после переполнения динамической памяти.
Таким образом мы можем сделать вывод, что если задача программы была в беспрерывной работе, но при этом в ней допущена утечка памяти - то программа внепланово завершит свою работу.
Пронаблюдать за расхожом памяти можно через диспетчер задач, в вкладке "Performance" (в моем случае это был полностью "безопасный вариант"),
eсли же запустить программу через "локальный отладчик", то (в моем случае) из памяти выгрузились некоторые приложения (браузер/ОБС и тп).
*/

void recursion(int& x)
{
	++x;
	std::cout << x<<std::endl;
	char* ch = new char[10000000];
	recursion(x);
}

int main()
{
	int x = 0;
	recursion(x);


	return 0;
}